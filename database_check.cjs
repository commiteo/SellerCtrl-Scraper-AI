// Comprehensive Database Check Script
// ูุญุต ุดุงูู ููุงุนุฏุฉ ุงูุจูุงูุงุช

const { createClient } = require('@supabase/supabase-js');

const supabaseUrl = 'https://aqkaxcwdcqnwzgvaqtne.supabase.co';
const supabaseKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImFxa2F4Y3dkY3Fud3pndmFxdG5lIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc1MTQzMDc1MCwiZXhwIjoyMDY3MDA2NzUwfQ.H10_HKP1Zie6QO9vc4YhHVgbOudVSiSzk1euC3tZki8';
const supabase = createClient(supabaseUrl, supabaseKey);

async function checkDatabase() {
  console.log('๐ ุจุฏุก ุงููุญุต ุงูุดุงูู ููุงุนุฏุฉ ุงูุจูุงูุงุช...\n');

  try {
    // 1. ูุญุต ุงูุฌุฏุงูู ุงูุฃุณุงุณูุฉ
    console.log('๐ ูุญุต ุงูุฌุฏุงูู ุงูุฃุณุงุณูุฉ...');
    
    const tables = [
      'amazon_scraping_history',
      'noon_scraping_history', 
      'multi_domain_scraping_history',
      'price_history',
      'seller_info',
      'monitored_products',
      'telegram_config',
      'users',
      'user_sessions'
    ];

    for (const table of tables) {
      try {
        const { data, error } = await supabase
          .from(table)
          .select('*')
          .limit(1);
        
        if (error) {
          console.log(`โ ุฌุฏูู ${table}: ${error.message}`);
        } else {
          console.log(`โ ุฌุฏูู ${table}: ููุฌูุฏ`);
        }
      } catch (err) {
        console.log(`โ ุฌุฏูู ${table}: ุบูุฑ ููุฌูุฏ - ${err.message}`);
      }
    }

    console.log('\n๐ ูุญุต ุฃุนูุฏุฉ ุงูุฌุฏุงูู ุงููููุฉ...');

    // 2. ูุญุต ุฃุนูุฏุฉ price_history
    try {
      const { data: priceHistory, error } = await supabase
        .from('price_history')
        .select('*')
        .limit(1);
      
      if (error) {
        console.log(`โ ูุดููุฉ ูู price_history: ${error.message}`);
      } else {
        console.log('โ ุฌุฏูู price_history ูุนูู ุจุดูู ุตุญูุญ');
        if (priceHistory && priceHistory.length > 0) {
          const columns = Object.keys(priceHistory[0]);
          console.log(`   ุงูุฃุนูุฏุฉ ุงูููุฌูุฏุฉ: ${columns.join(', ')}`);
        }
      }
    } catch (err) {
      console.log(`โ ุฎุทุฃ ูู ูุญุต price_history: ${err.message}`);
    }

    // 3. ูุญุต ุฃุนูุฏุฉ seller_info
    try {
      const { data: sellerInfo, error } = await supabase
        .from('seller_info')
        .select('*')
        .limit(1);
      
      if (error) {
        console.log(`โ ูุดููุฉ ูู seller_info: ${error.message}`);
      } else {
        console.log('โ ุฌุฏูู seller_info ูุนูู ุจุดูู ุตุญูุญ');
        if (sellerInfo && sellerInfo.length > 0) {
          const columns = Object.keys(sellerInfo[0]);
          console.log(`   ุงูุฃุนูุฏุฉ ุงูููุฌูุฏุฉ: ${columns.join(', ')}`);
        }
      }
    } catch (err) {
      console.log(`โ ุฎุทุฃ ูู ูุญุต seller_info: ${err.message}`);
    }

    // 4. ูุญุต ุฃุนูุฏุฉ monitored_products
    try {
      const { data: monitoredProducts, error } = await supabase
        .from('monitored_products')
        .select('*')
        .limit(1);
      
      if (error) {
        console.log(`โ ูุดููุฉ ูู monitored_products: ${error.message}`);
      } else {
        console.log('โ ุฌุฏูู monitored_products ูุนูู ุจุดูู ุตุญูุญ');
        if (monitoredProducts && monitoredProducts.length > 0) {
          const columns = Object.keys(monitoredProducts[0]);
          console.log(`   ุงูุฃุนูุฏุฉ ุงูููุฌูุฏุฉ: ${columns.join(', ')}`);
        }
      }
    } catch (err) {
      console.log(`โ ุฎุทุฃ ูู ูุญุต monitored_products: ${err.message}`);
    }

    // 5. ูุญุต telegram_config
    try {
      const { data: telegramConfig, error } = await supabase
        .from('telegram_config')
        .select('*')
        .limit(1);
      
      if (error) {
        console.log(`โ ูุดููุฉ ูู telegram_config: ${error.message}`);
      } else {
        console.log('โ ุฌุฏูู telegram_config ูุนูู ุจุดูู ุตุญูุญ');
        if (telegramConfig && telegramConfig.length > 0) {
          const columns = Object.keys(telegramConfig[0]);
          console.log(`   ุงูุฃุนูุฏุฉ ุงูููุฌูุฏุฉ: ${columns.join(', ')}`);
        }
      }
    } catch (err) {
      console.log(`โ ุฎุทุฃ ูู ูุญุต telegram_config: ${err.message}`);
    }

    // 6. ูุญุต ุงูุจูุงูุงุช ุงูููุฌูุฏุฉ
    console.log('\n๐ ูุญุต ุงูุจูุงูุงุช ุงูููุฌูุฏุฉ...');
    
    try {
      const { count: amazonCount } = await supabase
        .from('amazon_scraping_history')
        .select('*', { count: 'exact', head: true });
      
      const { count: noonCount } = await supabase
        .from('noon_scraping_history')
        .select('*', { count: 'exact', head: true });
      
      const { count: monitoredCount } = await supabase
        .from('monitored_products')
        .select('*', { count: 'exact', head: true });
      
      const { count: priceHistoryCount } = await supabase
        .from('price_history')
        .select('*', { count: 'exact', head: true });
      
      console.log(`๐ ุฅุญุตุงุฆูุงุช ุงูุจูุงูุงุช:`);
      console.log(`   Amazon scraping: ${amazonCount || 0} ุณุฌู`);
      console.log(`   Noon scraping: ${noonCount || 0} ุณุฌู`);
      console.log(`   Monitored products: ${monitoredCount || 0} ููุชุฌ`);
      console.log(`   Price history: ${priceHistoryCount || 0} ุณุฌู`);
    } catch (err) {
      console.log(`โ ุฎุทุฃ ูู ูุญุต ุงูุจูุงูุงุช: ${err.message}`);
    }

    // 7. ูุญุต RLS Policies
    console.log('\n๐ ูุญุต RLS Policies...');
    
    try {
      const { data: policies, error } = await supabase
        .rpc('get_policies');
      
      if (error) {
        console.log(`โ ูุง ูููู ูุญุต RLS Policies: ${error.message}`);
      } else {
        console.log('โ RLS Policies ุชุนูู ุจุดูู ุตุญูุญ');
      }
    } catch (err) {
      console.log(`โ ุฎุทุฃ ูู ูุญุต RLS Policies: ${err.message}`);
    }

    // 8. ูุญุต ุงูุงุชุตุงู
    console.log('\n๐ ูุญุต ุงูุงุชุตุงู ุจูุงุนุฏุฉ ุงูุจูุงูุงุช...');
    
    try {
      const { data, error } = await supabase
        .from('amazon_scraping_history')
        .select('count')
        .limit(1);
      
      if (error) {
        console.log(`โ ูุดููุฉ ูู ุงูุงุชุตุงู: ${error.message}`);
      } else {
        console.log('โ ุงูุงุชุตุงู ุจูุงุนุฏุฉ ุงูุจูุงูุงุช ูุนูู ุจุดูู ุตุญูุญ');
      }
    } catch (err) {
      console.log(`โ ุฎุทุฃ ูู ุงูุงุชุตุงู: ${err.message}`);
    }

    console.log('\nโ ุงูุชูู ุงููุญุต ุงูุดุงูู ููุงุนุฏุฉ ุงูุจูุงูุงุช');

  } catch (error) {
    console.error('โ ุฎุทุฃ ุนุงู ูู ูุญุต ูุงุนุฏุฉ ุงูุจูุงูุงุช:', error);
  }
}

// ุชุดุบูู ุงููุญุต
checkDatabase().then(() => {
  console.log('\n๐ ุชู ุงูุงูุชูุงุก ูู ูุญุต ูุงุนุฏุฉ ุงูุจูุงูุงุช');
  process.exit(0);
}).catch((error) => {
  console.error('โ ุฎุทุฃ ูู ุชุดุบูู ุงููุญุต:', error);
  process.exit(1);
}); 